declare namespace _default {
    export { CALL };
    export { CONSTRUCT };
    export { ESM };
    export { findVariable };
    export { getFunctionHeadLocation };
    export { getFunctionNameWithKind };
    export { getInnermostScope };
    export { getPropertyName };
    export { getStaticValue };
    export { getStringIfConstant };
    export { hasSideEffect };
    export { isArrowToken };
    export { isClosingBraceToken };
    export { isClosingBracketToken };
    export { isClosingParenToken };
    export { isColonToken };
    export { isCommaToken };
    export { isCommentToken };
    export { isNotArrowToken };
    export { isNotClosingBraceToken };
    export { isNotClosingBracketToken };
    export { isNotClosingParenToken };
    export { isNotColonToken };
    export { isNotCommaToken };
    export { isNotCommentToken };
    export { isNotOpeningBraceToken };
    export { isNotOpeningBracketToken };
    export { isNotOpeningParenToken };
    export { isNotSemicolonToken };
    export { isOpeningBraceToken };
    export { isOpeningBracketToken };
    export { isOpeningParenToken };
    export { isParenthesized };
    export { isSemicolonToken };
    export { PatternMatcher };
    export { READ };
    export { ReferenceTracker };
}
export default _default;
import { CALL } from "./reference-tracker";
import { CONSTRUCT } from "./reference-tracker";
import { ESM } from "./reference-tracker";
import { findVariable } from "./find-variable";
import { getFunctionHeadLocation } from "./get-function-head-location";
import { getFunctionNameWithKind } from "./get-function-name-with-kind";
import { getInnermostScope } from "./get-innermost-scope";
import { getPropertyName } from "./get-property-name";
import { getStaticValue } from "./get-static-value";
import { getStringIfConstant } from "./get-string-if-constant";
import { hasSideEffect } from "./has-side-effect";
import { isArrowToken } from "./token-predicate";
import { isClosingBraceToken } from "./token-predicate";
import { isClosingBracketToken } from "./token-predicate";
import { isClosingParenToken } from "./token-predicate";
import { isColonToken } from "./token-predicate";
import { isCommaToken } from "./token-predicate";
import { isCommentToken } from "./token-predicate";
import { isNotArrowToken } from "./token-predicate";
import { isNotClosingBraceToken } from "./token-predicate";
import { isNotClosingBracketToken } from "./token-predicate";
import { isNotClosingParenToken } from "./token-predicate";
import { isNotColonToken } from "./token-predicate";
import { isNotCommaToken } from "./token-predicate";
import { isNotCommentToken } from "./token-predicate";
import { isNotOpeningBraceToken } from "./token-predicate";
import { isNotOpeningBracketToken } from "./token-predicate";
import { isNotOpeningParenToken } from "./token-predicate";
import { isNotSemicolonToken } from "./token-predicate";
import { isOpeningBraceToken } from "./token-predicate";
import { isOpeningBracketToken } from "./token-predicate";
import { isOpeningParenToken } from "./token-predicate";
import { isParenthesized } from "./is-parenthesized";
import { isSemicolonToken } from "./token-predicate";
import { PatternMatcher } from "./pattern-matcher";
import { READ } from "./reference-tracker";
import { ReferenceTracker } from "./reference-tracker";
export { CALL, CONSTRUCT, ESM, findVariable, getFunctionHeadLocation, getFunctionNameWithKind, getInnermostScope, getPropertyName, getStaticValue, getStringIfConstant, hasSideEffect, isArrowToken, isClosingBraceToken, isClosingBracketToken, isClosingParenToken, isColonToken, isCommaToken, isCommentToken, isNotArrowToken, isNotClosingBraceToken, isNotClosingBracketToken, isNotClosingParenToken, isNotColonToken, isNotCommaToken, isNotCommentToken, isNotOpeningBraceToken, isNotOpeningBracketToken, isNotOpeningParenToken, isNotSemicolonToken, isOpeningBraceToken, isOpeningBracketToken, isOpeningParenToken, isParenthesized, isSemicolonToken, PatternMatcher, READ, ReferenceTracker };
